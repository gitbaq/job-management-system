{"ast":null,"code":"var _jsxFileName = \"/Users/syedbaqirali/src/ui-apps/jms-ui/src/components/Jobslist.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Jobslist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/jobs/status\", {\n      mode: 'no-cors'\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.json\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }, this);\n    } else {\n      return Hello // <ul>\n      //   {jobs.map(job => (\n      //     <li key={job.id}>\n      //       {job.jobName} {job.status}\n      //     </li>\n      //   ))}\n      // </ul>\n      ;\n    }\n  }\n\n}\n\nexport default Jobslist;","map":{"version":3,"sources":["/Users/syedbaqirali/src/ui-apps/jms-ui/src/components/Jobslist.js"],"names":["React","Jobslist","Component","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","mode","then","res","json","result","setState","render","message","Hello"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,mCAAD,EAAqC;AAACC,MAAAA,IAAI,EAAC;AAAN,KAArC,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZT,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEO,MAAM,CAACD;AAFF,OAAd;AAKD,KATL,EAUI;AACA;AACA;AACCR,IAAAA,KAAD,IAAW;AACT,WAAKU,QAAL,CAAc;AACZT,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAlBL;AAoBD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA,8BAAaA,KAAK,CAACY,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,aACEY,KADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AARF;AAUD;AACF;;AArDgC;;AAwDnC,eAAelB,QAAf","sourcesContent":["import React from \"react\";\n\nclass Jobslist extends React.Component {\n    \n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        items: [],\n        \n      };\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:8080/jobs/status\",{mode:'no-cors'})\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                items: result.json\n                \n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          )\n      }\n    \n      render() {\n        const { error, isLoaded, items } = this.state;\n        if (error) {\n          return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n          return <div>Loading...</div>;\n        } else {\n          return (\n            Hello\n            // <ul>\n            //   {jobs.map(job => (\n            //     <li key={job.id}>\n            //       {job.jobName} {job.status}\n            //     </li>\n            //   ))}\n            // </ul>\n          );\n        }\n      }\n    }\n\n    export default Jobslist;"]},"metadata":{},"sourceType":"module"}