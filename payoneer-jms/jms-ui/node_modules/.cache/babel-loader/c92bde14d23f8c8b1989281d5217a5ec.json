{"ast":null,"code":"var _jsxFileName = \"/Users/syedbaqirali/src/ui-apps/jms-ui/src/components/Jobslist.js\";\nimport React, { Component } from \"react\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\"; //data for post\n// import data from \"./jobs.json\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Jobslist extends Component {\n  constructor(props) {\n    super(props);\n    this.jobStatus = props.status;\n    this.url = \"http://localhost:8080/jobs/status/\" + this.jobStatus;\n    this.state = {\n      error: null,\n      isLoaded: true,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.url).then(res => res.json()).then(result => {\n      // console.log(\">>>> \"+ result);\n      this.setState({\n        isLoaded: true,\n        items: result\n      }); // console.log(\"<<<<<<< \"+ this.state.items);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error != null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: this.url,\n          target: \"_blank\",\n          children: \"Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 30\n        }, this), \" \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 18\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 18\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: [\"Jobs with status \", this.jobStatus, \": \", items.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(CardDeck, {\n              className: \" no-gutters \",\n              children: items.map(postData => {\n                // console.log(postData);\n                return (// <li>\n                  postData.id + \". \" + postData.jobName // </li>\n                  // <Card  key={postData.id}>\n                  //   {/* <Card.Img variant=\"top\" src={postData.image} /> */}\n                  //   <Card.Body>\n                  //     <Card.Title >\n                  //       {postData.id + \". \" + postData.jobName}\n                  //     </Card.Title>\n                  //     <Card.Subtitle >\n                  //       {/* {postData.add_dt + \" \" + postData.addCd} */}\n                  //     </Card.Subtitle>\n                  //     <Card.Text >\n                  //       {/* {postData.jobDesc} */}\n                  //     </Card.Text>\n                  //   </Card.Body>\n                  // </Card>\n\n                );\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/syedbaqirali/src/ui-apps/jms-ui/src/components/Jobslist.js"],"names":["React","Component","CardDeck","Card","Container","Row","Jobslist","constructor","props","jobStatus","status","url","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","message","length","map","postData","id","jobName"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB,C,CAEA;AACA;;;;AAEA,eAAe,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAG5CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiBD,KAAK,CAACE,MAAvB;AACA,SAAKC,GAAL,GAAS,uCAAqC,KAAKF,SAAnD;AACA,SAAKG,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AACpBC,IAAAA,KAAK,CAAC,KAAKN,GAAN,CAAL,CAECO,IAFD,CAEMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFb,EAGCF,IAHD,CAIIG,MAAD,IAAY;AACT;AACD,WAAKC,QAAL,CAAc;AAEZR,QAAAA,QAAQ,EAAE,IAFE;AAGZC,QAAAA,KAAK,EAACM;AAHM,OAAd,EAFU,CAQV;AACD,KAbJ,EAcG;AACA;AACA;AACCR,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAtBJ;AAwBH;;AAEKU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAK,IAAI,IAAb,EAAmB;AACjB,0BAAO;AAAA,2CAAY;AAAG,UAAA,IAAI,EAAE,KAAKF,GAAd;AAAmB,UAAA,MAAM,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ,OAAyDE,KAAK,CAACW,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACV,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA,+BAEE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE,IAAlB;AAAA,kCACE,QAAC,GAAD;AAAA,mCAAK;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,8CAAyC,KAAKL,SAA9C,QAA2DM,KAAK,CAACU,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,GAAD;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,SAAS,EAAC,cAApB;AAAA,wBAEGV,KAAK,CAACW,GAAN,CAAWC,QAAD,IAAc;AACvB;AACA,uBACE;AACEA,kBAAAA,QAAQ,CAACC,EAAT,GAAc,IAAd,GAAqBD,QAAQ,CAACE,OAFlC,CAGI;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAnBF;AAqBD,eAvBA;AAFH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,uBADF;AAsCD;AACF;;AAxFyC","sourcesContent":["import React, {Component} from \"react\";\n\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\n//data for post\n// import data from \"./jobs.json\";\n\nexport default class Jobslist extends Component {\n    jobStatus;\n    url;\n    constructor(props) {\n      super(props);\n      this.jobStatus = props.status;\n      this.url=\"http://localhost:8080/jobs/status/\"+this.jobStatus;\n      this.state = {\n        error: null,\n        isLoaded: true,\n        items: [],\n        \n      };\n    }\n\n    componentDidMount() {\n    fetch(this.url)\n    \n    .then(res => res.json())\n    .then(\n       (result) => {\n          // console.log(\">>>> \"+ result);\n         this.setState({\n          \n           isLoaded: true,\n           items:result\n          \n         });\n         // console.log(\"<<<<<<< \"+ this.state.items);\n       },\n       // Note: it's important to handle errors here\n       // instead of a catch() block so that we don't swallow\n       // exceptions from actual bugs in components.\n       (error) => {\n         this.setState({\n           isLoaded: true,\n           error\n         });\n       }\n     )\n}\n    \n      render() {\n        const { error, isLoaded, items } = this.state;\n        if (error != null) {\n          return <div>Error: <a href={this.url} target=\"_blank\">Link</a> {error.message}</div>;\n        } else if (!isLoaded) {\n          return <div>Loading...</div>;\n        } else {\n          return (\n            <>\n            \n              <Container fluid={true}>\n                <Row><div className=\"title\">Jobs with status {this.jobStatus}: {items.length}</div></Row>\n                <Row>\n                  <CardDeck className=' no-gutters '>\n                    {/* <ul> */}\n                    {items.map((postData) => {\n                      // console.log(postData);\n                      return (\n                        // <li>\n                          postData.id + \". \" + postData.jobName\n                          // </li>\n                        // <Card  key={postData.id}>\n                        //   {/* <Card.Img variant=\"top\" src={postData.image} /> */}\n                        //   <Card.Body>\n                        //     <Card.Title >\n                        //       {postData.id + \". \" + postData.jobName}\n                        //     </Card.Title>\n                        //     <Card.Subtitle >\n                        //       {/* {postData.add_dt + \" \" + postData.addCd} */}\n                        //     </Card.Subtitle>\n      \n                        //     <Card.Text >\n                        //       {/* {postData.jobDesc} */}\n                              \n                        //     </Card.Text>\n                        //   </Card.Body>\n                        // </Card>\n                      );\n                    })}\n                    {/* </ul> */}\n                  </CardDeck>\n                </Row>\n              </Container>\n            </>\n          );\n        }\n      }\n    }"]},"metadata":{},"sourceType":"module"}