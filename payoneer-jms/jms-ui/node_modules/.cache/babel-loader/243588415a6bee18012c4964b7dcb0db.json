{"ast":null,"code":"import _classCallCheck from\"/Users/syedbaqirali/src/ui-apps/jms-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/syedbaqirali/src/ui-apps/jms-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/syedbaqirali/src/ui-apps/jms-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/syedbaqirali/src/ui-apps/jms-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/syedbaqirali/src/ui-apps/jms-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import CardDeck from\"react-bootstrap/CardDeck\";import Card from\"react-bootstrap/Card\";import Container from\"react-bootstrap/Container\";import Row from\"react-bootstrap/Row\";//data for post\n// import data from \"./jobs.json\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Jobslist=/*#__PURE__*/function(_Component){_inherits(Jobslist,_Component);var _super=_createSuper(Jobslist);function Jobslist(props){var _this;_classCallCheck(this,Jobslist);_this=_super.call(this,props);_this.getData=function(){fetch(_this.url).then(function(res){return res.json();}).then(function(result){// console.log(\">>>> \"+ result);\n_this.setState({isLoaded:true,items:result});_this.intervalID=setTimeout(_this.getData.bind(_assertThisInitialized(_this)),500);// console.log(\"<<<<<<< \"+ this.state.items);\n},// Note: it's important to handle errors here\n// instead of a catch() block so that we don't swallow\n// exceptions from actual bugs in components.\nfunction(error){_this.setState({isLoaded:true,error:error});});};_this.jobStatus=props.status;_this.url=\"http://localhost:8080/jobs/status/\"+_this.jobStatus;_this.state={error:null,isLoaded:true,items:[]};return _this;}_createClass(Jobslist,[{key:\"componentDidMount\",value:function componentDidMount(){this.getData();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){/*\n    stop getData() from continuing to run even\n    after unmounting this component. Notice we are calling\n    'clearTimeout()` here rather than `clearInterval()` as\n    in the previous example.\n  */clearTimeout(this.intervalID);}},{key:\"render\",value:function render(){var _this$state=this.state,error=_this$state.error,isLoaded=_this$state.isLoaded,items=_this$state.items;if(error!=null){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",/*#__PURE__*/_jsx(\"a\",{href:this.url,target:\"_blank\",children:\"Link\"}),\" \",error.message]});}else if(!isLoaded){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}else{return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Container,{fluid:true,children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"title\",children:[\"Jobs with status \",this.jobStatus,\": \",items.length]})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(CardDeck,{className:\" no-gutters \",children:items.map(function(postData){// console.log(postData);\nreturn/*#__PURE__*/_jsx(\"li\",{children:postData.id+\". \"+postData.jobName})// <Card  key={postData.id}>\n//   {/* <Card.Img variant=\"top\" src={postData.image} /> */}\n//   <Card.Body>\n//     <Card.Title >\n//       {postData.id + \". \" + postData.jobName}\n//     </Card.Title>\n//     <Card.Subtitle >\n//       {/* {postData.add_dt + \" \" + postData.addCd} */}\n//     </Card.Subtitle>\n//     <Card.Text >\n//       {/* {postData.jobDesc} */}\n//     </Card.Text>\n//   </Card.Body>\n// </Card>\n;})})})]})});}}}]);return Jobslist;}(Component);export{Jobslist as default};","map":{"version":3,"sources":["/Users/syedbaqirali/src/ui-apps/jms-ui/src/components/Jobslist.js"],"names":["React","Component","CardDeck","Card","Container","Row","Jobslist","props","getData","fetch","url","then","res","json","result","setState","isLoaded","items","intervalID","setTimeout","bind","error","jobStatus","status","state","clearTimeout","message","length","map","postData","id","jobName"],"mappings":"ixBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CAEA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CAEA;AACA;gJAEqBC,CAAAA,Q,oGAIjB,kBAAYC,KAAZ,CAAmB,0CACjB,uBAAMA,KAAN,EADiB,MA2BvBC,OA3BuB,CA2Bb,UAAK,CACbC,KAAK,CAAC,MAAKC,GAAN,CAAL,CAEGC,IAFH,CAEQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAFX,EAGGF,IAHH,CAIK,SAACG,MAAD,CAAY,CACT;AACD,MAAKC,QAAL,CAAc,CAEZC,QAAQ,CAAE,IAFE,CAGZC,KAAK,CAACH,MAHM,CAAd,EAMA,MAAKI,UAAL,CAAkBC,UAAU,CAAC,MAAKX,OAAL,CAAaY,IAAb,+BAAD,CAA0B,GAA1B,CAA5B,CACA;AACD,CAdN,CAeK;AACA;AACA;AACA,SAACC,KAAD,CAAW,CACT,MAAKN,QAAL,CAAc,CACZC,QAAQ,CAAE,IADE,CAEZK,KAAK,CAALA,KAFY,CAAd,EAID,CAvBN,EAyBD,CArDsB,CAEjB,MAAKC,SAAL,CAAiBf,KAAK,CAACgB,MAAvB,CACA,MAAKb,GAAL,CAAS,qCAAqC,MAAKY,SAAnD,CACA,MAAKE,KAAL,CAAa,CACXH,KAAK,CAAE,IADI,CAEXL,QAAQ,CAAE,IAFC,CAGXC,KAAK,CAAE,EAHI,CAAb,CAJiB,aAUlB,C,sDAED,4BAAoB,CAClB,KAAKT,OAAL,GAEL,C,oCAED,+BAAuB,CACrB;AACF;AACA;AACA;AACA;AACA,IACEiB,YAAY,CAAC,KAAKP,UAAN,CAAZ,CACD,C,sBA8BK,iBAAS,CACP,gBAAmC,KAAKM,KAAxC,CAAQH,KAAR,aAAQA,KAAR,CAAeL,QAAf,aAAeA,QAAf,CAAyBC,KAAzB,aAAyBA,KAAzB,CACA,GAAII,KAAK,EAAI,IAAb,CAAmB,CACjB,mBAAO,8CAAY,UAAG,IAAI,CAAE,KAAKX,GAAd,CAAmB,MAAM,CAAC,QAA1B,kBAAZ,KAAyDW,KAAK,CAACK,OAA/D,GAAP,CACD,CAFD,IAEO,IAAI,CAACV,QAAL,CAAe,CACpB,mBAAO,mCAAP,CACD,CAFM,IAEA,CACL,mBACE,sCAEE,MAAC,SAAD,EAAW,KAAK,CAAE,IAAlB,wBACE,KAAC,GAAD,wBAAK,aAAK,SAAS,CAAC,OAAf,+BAAyC,KAAKM,SAA9C,MAA2DL,KAAK,CAACU,MAAjE,GAAL,EADF,cAEE,KAAC,GAAD,wBACE,KAAC,QAAD,EAAU,SAAS,CAAC,cAApB,UAEGV,KAAK,CAACW,GAAN,CAAU,SAACC,QAAD,CAAc,CACvB;AACA,mBACG,oBACEA,QAAQ,CAACC,EAAT,CAAc,IAAd,CAAqBD,QAAQ,CAACE,OADhC,EAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAnBF,CAqBD,CAvBA,CAFH,EADF,EAFF,GAFF,EADF,CAsCD,CACF,C,sBAzG+B9B,S,SAAjBK,Q","sourcesContent":["import React, {Component} from \"react\";\n\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\n//data for post\n// import data from \"./jobs.json\";\n\nexport default class Jobslist extends Component {\n    jobStatus;\n    url;\n    intervalID;\n    constructor(props) {\n      super(props);\n      this.jobStatus = props.status;\n      this.url=\"http://localhost:8080/jobs/status/\"+this.jobStatus;\n      this.state = {\n        error: null,\n        isLoaded: true,\n        items: [],\n        \n      };\n    }\n\n    componentDidMount() {\n      this.getData();\n    \n}\n\ncomponentWillUnmount() {\n  /*\n    stop getData() from continuing to run even\n    after unmounting this component. Notice we are calling\n    'clearTimeout()` here rather than `clearInterval()` as\n    in the previous example.\n  */\n  clearTimeout(this.intervalID);\n}\n\ngetData = () =>{\n  fetch(this.url)\n    \n    .then(res => res.json())\n    .then(\n       (result) => {\n          // console.log(\">>>> \"+ result);\n         this.setState({\n          \n           isLoaded: true,\n           items:result\n          \n         });\n         this.intervalID = setTimeout(this.getData.bind(this), 500);\n         // console.log(\"<<<<<<< \"+ this.state.items);\n       },\n       // Note: it's important to handle errors here\n       // instead of a catch() block so that we don't swallow\n       // exceptions from actual bugs in components.\n       (error) => {\n         this.setState({\n           isLoaded: true,\n           error\n         });\n       }\n     )\n}\n    \n      render() {\n        const { error, isLoaded, items } = this.state;\n        if (error != null) {\n          return <div>Error: <a href={this.url} target=\"_blank\">Link</a> {error.message}</div>;\n        } else if (!isLoaded) {\n          return <div>Loading...</div>;\n        } else {\n          return (\n            <>\n            \n              <Container fluid={true}>\n                <Row><div className=\"title\">Jobs with status {this.jobStatus}: {items.length}</div></Row>\n                <Row>\n                  <CardDeck className=' no-gutters '>\n                    {/* <ul> */}\n                    {items.map((postData) => {\n                      // console.log(postData);\n                      return (\n                         <li>\n                          {postData.id + \". \" + postData.jobName}\n                          </li>\n                        // <Card  key={postData.id}>\n                        //   {/* <Card.Img variant=\"top\" src={postData.image} /> */}\n                        //   <Card.Body>\n                        //     <Card.Title >\n                        //       {postData.id + \". \" + postData.jobName}\n                        //     </Card.Title>\n                        //     <Card.Subtitle >\n                        //       {/* {postData.add_dt + \" \" + postData.addCd} */}\n                        //     </Card.Subtitle>\n      \n                        //     <Card.Text >\n                        //       {/* {postData.jobDesc} */}\n                              \n                        //     </Card.Text>\n                        //   </Card.Body>\n                        // </Card>\n                      );\n                    })}\n                    {/* </ul> */}\n                  </CardDeck>\n                </Row>\n              </Container>\n            </>\n          );\n        }\n      }\n    }"]},"metadata":{},"sourceType":"module"}